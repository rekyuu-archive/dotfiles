#!/bin/bash

# kyo.li uploader script
#
# requirements:
#   maim
#   slop
#   jq
#   xclip
#   libnotify
#
# $ screenshot all
#   for fullscreen
#
# $ screenshot region
#   for region selection
#
# $ screenshot webm
#   for webm screen recording
#   press `q` to stop the recording if ran from a terminal.
#   otherwise, run the above command again to stop recording.

# Defines the URLs to make the POST
URL="https://kyo.li"
API="/api/upload"
UPLOAD=$URL$API

# Defines the folder and file names
DIR=~/img/screenshots/$(date "+%Y-%m")
FILENAME=$(date "+%Y-%m-%d_%H-%M-%S")

# Makes the directory if it doesn't exist
mkdir -p $DIR

# Runs maim depending on the script argument
if [ "$1" == "all" ]; then
	FILEPATH=$DIR/$FILENAME.png
	maim $FILEPATH
elif [ "$1" == "region" ]; then
	FILEPATH=$DIR/$FILENAME.png
	maim -s $FILEPATH -c 1,0,0,1 -b 1
#	maim -s $FILEPATH -c 1,0,0,1 -b 1 --opengl
#	maim ~/tmp.png
#
#	feh ~/tmp.png -g 5120x1080 &
#	sleep 0.25 && xdotool windowmove --relative --sync $(echo $(xdotool search "feh" | head -1)) x -180
#	maim -s $FILEPATH -c 1,0,0,1 -p 5 -b 1
#
#	sleep 0.25 && xpkill -x "feh"
#	rm ~/tmp.png
elif [ "$1" == "webm" ]; then
	# Checks if ffmpeg is running, terminates it if it is.
	# Otherwise, starts the recording.
	FILEPATH=$DIR/$FILENAME.webm

	if [ "$(pidof ffmpeg)" ]; then
		kill -SIGTERM $(pidof ffmpeg)
	else
		# Records lossless video
		eval $(slop -c 1,0,0,1 -b 1)
#		eval $(slop -c 1,0,0,1 -b 1 --opengl)
		ffmpeg \
			-s "$W"x"$H" \
			-framerate 60 \
			-f x11grab \
			-i :0.0+$X,$Y \
			-f pulse \
			-ac 2 \
			-i default \
			-c:v libx264 \
			-qp 0 \
			-preset ultrafast \
			~/tmp.mkv

		# Converts to webm
		notify-send "Converting..."
		paplay ~/sfx/smrpg_flower.wav

		ffmpeg \
			-r 60 \
			-i ~/tmp.mkv \
			-c:v libvpx \
			-r 60 \
			-crf 4 \
			-b:v 15M \
			-c:a libvorbis \
			$FILEPATH

		# Removes the old file
		rm ~/tmp.mkv
	fi
fi

if [ -e $FILEPATH ]; then
	paplay ~/sfx/smrpg_click.wav

	# Uploads the image and returns the url
	RESPONSE=$(curl -s -F file_0=@$FILEPATH -F filename=$FILENAME $UPLOAD)
	IMAGE=$(echo $RESPONSE | jq -r .urls[0])
	LINK=$URL$IMAGE

	# Copies the link to clipboard and notifies the user
	echo $LINK | xclip -selection c
	notify-send $LINK
	paplay ~/sfx/smrpg_item.wav
fi
